Plotting is done after the captured packets are filtered with this condition:
(ip.src == 192.168.1.9 || ip.src == 192.168.1.33) && (ip.dst == 192.168.1.9 || ip.dst == 192.168.1.33)

Note: Filtering the packets captured with DNSPython library doesn't affect the result, no packets filtered.
Filtering the packets captured with Scapy significantly reduces the captured packet count.

--------------------------------------------------------------------------

Authoritative name server IP Address: 139.19.117.11
Client IP Address: 139.19.117.1

To get the communication between the authoritative server and a resolver:
(ip.src == 139.19.117.11 || ip.src == <resolver-ip>) && (ip.dst == 139.19.117.11 || ip.dst == <resolver-ip>)

To get the client queries to a specific resolver:
(ip.src == 139.19.117.1 || ip.src == <resolver-ip>) && (ip.dst == 139.19.117.1 || ip.dst == <resolver-ip>) && (dns.flags.response == 0)

To get the answers from a specific resolver:
(ip.src == 139.19.117.1 || ip.src == <resolver-ip>) && (ip.dst == 139.19.117.1 || ip.dst == <resolver-ip>) && (dns.flags.response == 1)


Example:
(ip.src == 139.19.117.1 || ip.src == 94.140.14.14) && (ip.dst == 139.19.117.1 || ip.dst == 94.140.14.14)


Get all the DNS restransmissions:
_ws.expert   
  OR   
dns.retransmit_request

"dns.retransmit_request_in": "1943",

"dns": {
          "dns.id": "0xb6aa",
          "dns.id_tree": {
            "_ws.expert": {
              "dns.retransmit_request": "",
              "_ws.expert.message": "DNS query retransmission. Original request in frame 1943",
              "_ws.expert.severity": "6291456",
              "_ws.expert.group": "150994944"
            }
          },
          "dns.flags": "0x0000",

Get all packets which has a specified query name(If the IP Address is not in out list):
Filter by Ip Address:
dns.qry.name matches "8-8-8-8-"
Filter by packetloss rate:
dns.qry.name matches "-pl10.packetloss.syssec-research.mmci.uni-saarland.de"

All TCP Packets or tc bit is set to 1:
dns.flags.truncated == 1 || tcp

--------------------------------------

# Get all DNS Answer packets from Cloudflare with packetlossrate 95:
dns.qry.name matches "1-0-0-1" && dns.qry.name matches "pl95" && dns.flags.response == 1

# Get all DNS Answer packets from Cloudflare where the answer was no error:
dns.qry.name matches "9-9-9-11" && dns.flags.response == 1&& dns.flags.rcode == 0

dns.qry.name matches "8-8-4-4"

WARNING: dns.qry.name matches "8-8-8-8" also shows the packets for Yandex2 with 77-88-8-8 IP Address and counter 8.

# DNS Open Resolver IP Addresses:
    94-140-14-14 :  # AdGuard 1  
    94-140-14-15 :  # AdGuard 2  
    185-228-168-168 :  # CleanBrowsing 1  
    185-228-168-9 :  # CleanBrowsing 2 
    1-1-1-1 :  # Cloudflare 1 
    1-0-0-1 :  # Cloudflare 2
    216-146-35-35 :  # Dyn 1
    216-146-36-36 :  # Dyn 2 
    8-8-8-8 :  # Google 1
    8-8-4-4 :  # Google 2 
    64-6-64-6 :  # Neustar 1  (?)
    156-154-70-1 :  # Neustar 2  (?)
    208-67-222-222 :  # OpenDNS 1
    208-67-222-2 :  # OpenDNS 2  
    9-9-9-9 :  # Quad9 1
    9-9-9-11 :  # Quad9 2
    77-88-8-1 :  # Yandex 1
    77-88-8-8 :  # Yandex 2
